name: CI
on: 
  push:
    branches:
      - main
jobs:
  build_linux:
    runs-on: ubuntu-latest
    container: ubuntu:focal-20210416
    env:
      TARGET_OS: linux
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install cmake
        run: apt-get update && apt-get -y install cmake

      - name: Build
        run: ./build_native.sh

      - name: Print
        run: ls -la

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: udp_toolkit_native.so
          path: ./build/${{ env.TARGET_OS }}/*.so

  build_macos:
    runs-on: macos-latest
    env:
      TARGET_OS: macos
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install cmake
        run: brew	install	cmake

      - name: Build
        run: ./build_native.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: udp_toolkit_native.dylib
          path: ./build/${{ env.TARGET_OS }}/*.dylib
          

  build_win:
    runs-on: ubuntu-latest
    container: ubuntu:focal-20210416
    env:
      TARGET_OS: win
    steps:
      - name: Checkout project
        uses: actions/checkout@v2
  
      - name: Install cmake
        run: apt-get update && apt-get -y install cmake && apt-get -y install gcc-mingw-w64-x86-64
  
      - name: Build
        run: ./build_native.sh
  
      - name: Print
        run: ls -la
  
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: udp_toolkit_native.dll
          path: ./build/${{ env.TARGET_OS }}/*.dll
          
  publish_nuget:
    runs-on: ubuntu-latest
    container: ubuntu:focal-20210416
    needs: [build_win, build_macos, build_linux]
    env:
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      PACKAGE_VERSION: 1.0.0-preview.1.${{ github.run_id }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
    steps:
      - uses: actions/checkout@v2

      - name: Print
        run: apt-get update && apt-get install curl -y

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - uses: actions/download-artifact@v2
        with:
          name: udp_toolkit_native.so

      - uses: actions/download-artifact@v2
        with:
          name: udp_toolkit_native.dylib

      - uses: actions/download-artifact@v2
        with:
          name: udp_toolkit_native.dll

      - name: Print
        run: ls -la

      - name: Build nuget
        run: ./build_nuget.sh

      - name: Publish nugets          
        run: ./publish_nuget.sh