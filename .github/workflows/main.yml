name: CI
on: 
  push:
    branches:
      - main
jobs:
  linux-x64:
    runs-on: ubuntu-latest
    env:
      TARGET_OS: linux
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: docker build
        run: docker-compose up --build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: linux-x64
          path: ./build/${{ env.TARGET_OS }}/*.so

  android-armv7:
    runs-on: ubuntu-latest
    env:
      TARGET_OS: android-armv7
      ABI: armeabi-v7a
      MINSDKVERSION: 24
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: docker build
        run: docker-compose up --build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: android-armv7
          path: ./build/${{ env.TARGET_OS }}/*.so

  android-armv8:
    runs-on: ubuntu-latest
    env:
      TARGET_OS: android-armv8
      ABI: arm64-v8a
      MINSDKVERSION: 24
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: docker build
        run: docker-compose up --build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: android-armv8
          path: ./build/${{ env.TARGET_OS }}/*.so

  win-x64:
    runs-on: ubuntu-latest
    env:
      TARGET_OS: win
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: docker build
        run: docker-compose up --build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: win-x64
          path: ./build/${{ env.TARGET_OS }}/*.dll

  macos:
    runs-on: macos-latest
    env:
      TARGET_OS: macos
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install cmake
        run: brew  install	cmake

      - name: Build
        run: ./build_native.sh

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: mac-x64
          path: ./build/${{ env.TARGET_OS }}/*.dylib
          
  ios:
    runs-on: macos-latest
    env:
      TARGET_OS: ios
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Build
        run: ./build_native.sh
  
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: ios
          path: ./build/${{ env.TARGET_OS }}/*.so

  build_nuget:
    runs-on: ubuntu-latest
    needs: [linux-x64, android-armv7, android-armv8, win-x64, macos, ios]
    env:
      DOTNET_SYSTEM_GLOBALIZATION_INVARIANT: 1
      PACKAGE_VERSION: 1.0.0-preview.2.${{ github.run_id }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '5.0.100'

      - uses: actions/download-artifact@v2
        with:
          name: android-armv7
          path: ./android-armv7

      - uses: actions/download-artifact@v2
        with:
          name: android-armv8
          path: ./android-armv8

      - uses: actions/download-artifact@v2
        with:
          name: ios
          path: ./ios

      - uses: actions/download-artifact@v2
        with:
          name: linux-x64
          path: ./linux-x64

      - uses: actions/download-artifact@v2
        with:
          name: mac-x64
          path: ./mac-x64

      - uses: actions/download-artifact@v2
        with:
          name: win-x64
          path: ./win-x64

      - name: Build nuget
        run: ./build_nuget.sh

      - name: Publish nugets          
        run: ./publish_nuget.sh

